<html>

<head>
<meta name=标题 content="lab6_file system.doc">
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 14 (filtered)">
<title>lab6_file system.doc</title>
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:楷体;
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:"\@楷体";
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:"Bitstream Vera Sans";}
@font-face
	{font-family:永中宋体;
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@永中宋体";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:楷体_GB2312;}
@font-face
	{font-family:"\@楷体_GB2312";}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	font-size:10.5pt;
	font-family:Calibri;
	color:windowtext;}
h1
	{margin-top:17.0pt;
	margin-right:0cm;
	margin-bottom:16.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:240%;
	font-size:22.0pt;
	font-family:Calibri;
	color:windowtext;
	font-weight:bold;}
h2
	{margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:172%;
	font-size:16.0pt;
	font-family:Cambria;
	color:windowtext;
	font-weight:bold;}
h3
	{margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:172%;
	font-size:16.0pt;
	font-family:Calibri;
	color:windowtext;
	font-weight:bold;}
h4
	{margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	line-height:156%;
	font-size:14.0pt;
	font-family:Cambria;
	color:windowtext;
	font-weight:bold;}
p.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	font-size:10.5pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	text-indent:0cm;
	layout-grid-mode:char;
	border:none;
	padding:0cm;
	font-size:9.0pt;
	font-family:Calibri;
	color:windowtext;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	text-indent:0cm;
	layout-grid-mode:char;
	font-size:9.0pt;
	font-family:Calibri;
	color:windowtext;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0cm;
	margin-bottom:.0001pt;
	text-indent:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:windowtext;}
p
	{margin:0cm;
	margin-bottom:.0001pt;
	text-indent:21.0pt;
	font-size:10.5pt;
	font-family:宋体;
	color:black;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:0cm;
	font-size:9.0pt;
	font-family:Calibri;
	color:windowtext;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:10.0pt;
	font-size:10.5pt;
	font-family:Calibri;
	color:windowtext;}
p.cwj, li.cwj, div.cwj
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	line-height:111%;
	font-size:10.5pt;
	font-family:"Times New Roman";
	color:windowtext;}
p.15, li.15, div.15
	{margin:0cm;
	margin-bottom:.0001pt;
	text-indent:10.0pt;
	line-height:150%;
	font-size:12.0pt;
	font-family:宋体;
	color:windowtext;}
span.a
	{font-family:Calibri;}
span.4
	{font-family:Cambria;
	font-weight:bold;}
.MsoChpDefault
	{font-size:10.0pt;}
 /* Page Definitions */
@page WordSection1
	{size:595.0pt 842.0pt;
	margin:36.0pt 36.0pt 36.0pt 36.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=EN-US>

<div class=WordSection1>

<p class=MsoNormal align=center style='text-align:center;line-height:29.2pt;
text-autospace:none'><b><span lang=ZH-CN style='font-size:16.0pt;font-family:
楷体'>实验八：文件系统</span></b></p>

<p class=MsoNormal align=left style='margin-top:.1pt;text-align:left;
line-height:5.5pt;text-autospace:none'><span style='font-size:5.5pt;font-family:
"Times New Roman"'>&nbsp;</span></p>

<h1 style='line-height:normal'><span style='font-size:16.0pt;font-family:"Times New Roman"'>1.
</span><span lang=ZH-CN style='font-size:16.0pt;font-family:楷体'>实验目的</span></h1>

<p class=MsoNormal align=left style='margin-top:1.9pt;margin-right:0cm;
margin-bottom:0cm;margin-left:6.0pt;margin-bottom:.0001pt;text-align:left;
text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>通过完成<span
style='letter-spacing:-.25pt'>本</span>次实验<span style='letter-spacing:-.25pt'>，</span>希望能<span
style='letter-spacing:-.25pt'>达</span>到以下<span style='letter-spacing:-.25pt'>目标</span></span></p>

<p class=MsoListParagraph align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:21.0pt;margin-bottom:.0001pt;text-align:left;
text-indent:-21.0pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:"永中宋体","serif"'>●<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>了解基本的文件系统系统调用的实现方法；</span></p>

<p class=MsoListParagraph align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:21.0pt;margin-bottom:.0001pt;text-align:left;
text-indent:-21.0pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:"永中宋体","serif"'>●<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>了解一个基于索引节点组织方式的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>Simple FS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统的设计与实现；</span></p>

<p class=MsoListParagraph align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:21.0pt;margin-bottom:.0001pt;text-align:left;
text-indent:-21.0pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:"永中宋体","serif"'>●<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体;
vertical-align:sub'>了解</span><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>文件系统抽象层</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>-VFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的设计与实现；</span></p>

<h1 style='line-height:normal'><span style='font-size:16.0pt;font-family:"Times New Roman"'>2.
</span><span lang=ZH-CN style='font-size:16.0pt;font-family:楷体'>实验内容</span></h1>

<p class=MsoNormal><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>实验七完成了在内核中的同步互斥实验</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。本次实验涉及的是文件系统，通过分析了解</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统的总体架构设计，完善读写文件操作，从新实现基于文件系统的执行程序机制（即改写</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>do_execve</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>），从而可以完成执行存储在磁盘上的文件和实现文件读写等功能。</span></p>

<p class=MsoNormal align=left style='margin-left:5.65pt;text-align:left;
text-autospace:none'><b><span style='font-size:14.0pt;font-family:"Times New Roman"'>2.1
</span></b><b><span lang=ZH-CN style='font-size:14.0pt;font-family:楷体'>练习</span></b></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:red'>练习</span></b><b><span
style='font-size:12.0pt;font-family:"Times New Roman";color:red'>0</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:red'>：填写已有实验</span></b></p>

<p class=15 style='text-align:justify;text-justify:inter-ideograph;text-indent:
0cm'><span lang=ZH-CN style='line-height:150%;font-family:楷体'>本实验依赖实验</span><span
style='line-height:150%;font-family:"Times New Roman"'>1/2/3/4/5/6/7</span><span
lang=ZH-CN style='line-height:150%;font-family:楷体'>。请把你做的实验</span><span
style='line-height:150%;font-family:"Times New Roman"'>1/2/3/4/5/6/7</span><span
lang=ZH-CN style='line-height:150%;font-family:楷体'>的代码填入本实验中代码中有</span><span
style='line-height:150%;font-family:"Times New Roman"'>“LAB1”/“LAB2”/“LAB3”/“LAB4”/“LAB5”/“LAB6”
/“LAB7”</span><span lang=ZH-CN style='line-height:150%;font-family:楷体'>的注释相应部分。并确保编译通过。注意：为了能够正确执行</span><span
style='line-height:150%;font-family:"Times New Roman"'>lab8</span><span
lang=ZH-CN style='line-height:150%;font-family:楷体'>的测试应用程序，可能需对已完成的实验</span><span
style='line-height:150%;font-family:"Times New Roman"'>1/2/3/4/5/6/7</span><span
lang=ZH-CN style='line-height:150%;font-family:楷体'>的代码进行进一步改进。</span></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:red'>练习</span></b><b><span
style='font-size:12.0pt;font-family:"Times New Roman";color:red'>1 </span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:red'>完成读文件操作的实现（需要编码）</span></b></p>

<p class=15 style='text-align:justify;text-justify:inter-ideograph;text-indent:
0cm'><span lang=ZH-CN style='line-height:150%;font-family:楷体'>首先了解打开文件的处理流程，然后参考本实验后续的文件读写操作的过程分析，编写在</span><span
style='line-height:150%;font-family:"Times New Roman"'>sfs_inode.c</span><span
lang=ZH-CN style='line-height:150%;font-family:楷体'>中</span><span
style='line-height:150%;font-family:"Times New Roman"'>sfs_io_nolock</span><span
lang=ZH-CN style='line-height:150%;font-family:楷体'>读文件中数据的实现代码<span>。</span></span></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:red'>练习</span></b><b><span
style='font-size:12.0pt;font-family:"Times New Roman";color:red'>2 </span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:red'>完成基于文件系统的执行程序机制的实现（需要编码）</span></b></p>

<p class=MsoNormal><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>改写</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>proc.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>load_icode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数和其他相关函数，实现基于文件系统的执行程序机制。执行：</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>make qemu</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。如果能看看到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sh</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>用户程序的执行界面，则基本成功了。如果在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sh</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>用户界面上可以执行</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>”ls”,”hello”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>等其他放置在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统中的其他执行程序，则可以认为本实验基本成功。（<b><span
style='color:red'>使用的是</span></b></span><b><span style='font-size:12.0pt;
font-family:"Times New Roman";color:red'>qemu-1.0.1</span></b><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>）。</span></p>

<p class=MsoNormal align=left style='margin-left:5.65pt;text-align:left;
text-autospace:none'><b><span style='font-size:14.0pt;font-family:"Times New Roman"'>2.2 
</span></b><b><span lang=ZH-CN style='font-size:14.0pt;font-family:楷体'>项目组成</span></b></p>

<p class=MsoNormal align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:6.0pt;margin-bottom:.0001pt;text-align:left;
text-indent:10.55pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:6.0pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=534 valign=top style='width:533.8pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>.</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> boot</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> kern</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> debug</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> driver</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>clock.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>clock.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman"'>……</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> fs</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> devs</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> dev.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> dev_disk0.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> dev.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> dev_stdin.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>└──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>
  dev_stdout.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> file.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> file.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> fs.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> fs.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> iobuf.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> iobuf.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> sfs</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> bitmap.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> bitmap.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> sfs.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> sfs_fs.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> sfs.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> sfs_inode.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> sfs_io.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>└──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> sfs_lock.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> swap</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> swapfs.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>└──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> swapfs.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> sysfile.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> sysfile.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>└──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> vfs</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;    
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> inode.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;    
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> inode.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;    
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> vfs.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;    
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> vfsdev.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;    
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> vfsfile.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;    
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> vfs.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;    
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>├──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> vfslookup.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>│</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>&nbsp;&nbsp;    
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体;color:red'>└──</span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'> vfspath.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> init</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> libs</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman";color:#7030A0'> stdio.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>string.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman"'>……</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> mm</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>vmm.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>vmm.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> process</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>proc.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>proc.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman"'>……</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> schedule</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> sync</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> syscall</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>syscall.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman"'>……</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> trap</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp;     </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> trap.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp;     </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman"'>……</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> libs</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> tools</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> mksfs.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman"'>……</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> user</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> badarg.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> badsegment.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> divzero.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> exit.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> faultread.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> faultreadkernel.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> forktest.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> forktree.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> hello.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'> libs</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman";color:red'> dir.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman";color:red'> dir.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>file.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>file.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>initcode.S</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman";color:red'> lock.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman";color:#7030A0'> stdio.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>syscall.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>syscall.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman";color:#7030A0'> ulib.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>ulib.h</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>│</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>&nbsp;&nbsp; </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:#7030A0'>umain.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span style='font-size:
  10.0pt;font-family:"Times New Roman";color:red'> ls.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>├──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman";color:red'>sh.c</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>    </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>└──</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:"Times New Roman"'> </span><span
  style='font-size:10.0pt;font-family:"Times New Roman"'>……</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:6.0pt;margin-bottom:.0001pt;text-align:left;
text-indent:10.55pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:6.0pt;margin-bottom:.0001pt;text-align:left;
text-indent:10.55pt;line-height:15.6pt;text-autospace:none'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>本次实验<span style='letter-spacing:-.25pt'>主要是理解</span></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>kern/fs</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>目录<span style='letter-spacing:
-.25pt'>中</span>的部分<span style='letter-spacing:-.25pt'>文件</span>，并可用</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:red'>user/*.<span
style='letter-spacing:-.25pt'>c</span></span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>测试所<span style='letter-spacing:-.25pt'>实</span>现的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>Simple FS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统是<span style='letter-spacing:
-.25pt'>否</span>能够正<span style='letter-spacing:-.25pt'>常</span>工作。<span
style='letter-spacing:-.25pt'>本</span>次实验<span style='letter-spacing:-.25pt'>涉</span>及到的<span
style='letter-spacing:-.25pt'>代</span>码<span style='letter-spacing:-.25pt'>包</span>括：</span></p>

<p class=MsoListParagraph align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:37.55pt;margin-bottom:.0001pt;text-align:left;
text-indent:-21.0pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统测试用例：</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:"Times New Roman"'> </span><span
style='font-size:12.0pt;font-family:"Times New Roman";vertical-align:sub'>user/*.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;vertical-align:sub'>：<span
style='letter-spacing:-.25pt'>对</span>文件系<span style='letter-spacing:-.25pt'>统</span>的实现<span
style='letter-spacing:-.25pt'>进</span>行测<span style='letter-spacing:-.25pt'>试的</span>测试用例<span
style='letter-spacing:-.25pt'>；</span></span></p>

<p class=MsoListParagraph align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:37.55pt;margin-bottom:.0001pt;text-align:left;
text-indent:-21.0pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>通用文件系统接口</span></p>

<p class=MsoListParagraph align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:58.55pt;margin-bottom:.0001pt;text-align:left;
text-indent:-21.0pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings;vertical-align:sub'>n<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman";vertical-align:sub'>user/libs/file.[ch]|dir.[ch]|syscall.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;vertical-align:sub'>：与文件系统操作相关的用户库实行；</span></p>

<p class=MsoListParagraph align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:58.55pt;margin-bottom:.0001pt;text-align:left;
text-indent:-21.0pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings;vertical-align:sub'>n<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman";vertical-align:sub'>kern/syscall.[ch]</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;vertical-align:sub'>：文件中包含文件系统相关的内核态系统调用接口</span></p>

<p class=MsoListParagraph align=left style='margin-top:4.8pt;margin-right:7.95pt;
margin-bottom:0cm;margin-left:58.55pt;margin-bottom:.0001pt;text-align:left;
text-indent:-21.0pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings;vertical-align:sub'>n<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman";vertical-align:sub'>kern/fs/sysfile.[ch]|file.[ch]</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;vertical-align:sub'>：通用文件系统接口和实行</span></p>

<p class=MsoListParagraph align=left style='margin-left:37.55pt;text-align:
left;text-indent:-21.0pt;line-height:15.15pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统抽象层</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>-VFS</span></p>

<p class=MsoListParagraph align=left style='margin-left:58.55pt;text-align:
left;text-indent:-21.0pt;line-height:15.15pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-size:12.0pt;font-family:"Times New Roman"'>kern/fs/vfs/*.[ch]</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>：虚拟文件系统接口与实现</span></p>

<p class=MsoListParagraph align=left style='margin-left:37.55pt;text-align:
left;text-indent:-21.0pt;line-height:15.15pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-size:12.0pt;font-family:"Times New Roman"'>Simple
FS</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统</span></p>

<p class=MsoListParagraph align=left style='margin-left:58.55pt;text-align:
left;text-indent:-21.0pt;line-height:15.15pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-size:12.0pt;font-family:"Times New Roman"'>kern/fs/sfs/*.[ch]</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>：</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SimpleFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统实现</span></p>

<p class=MsoListParagraph align=left style='margin-left:37.55pt;text-align:
left;text-indent:-21.0pt;line-height:15.15pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统的硬盘</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>IO</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>接口</span></p>

<p class=MsoListParagraph align=left style='margin-left:58.55pt;text-align:
left;text-indent:-21.0pt;line-height:15.15pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-size:12.0pt;font-family:"Times New Roman"'>kern/fs/devs/dev.[ch]|dev_disk0.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>：</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>disk0</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>硬盘设备提供给文件系统的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>I/O</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>访问接口和实现</span></p>

<p class=MsoListParagraph align=left style='margin-left:37.55pt;text-align:
left;text-indent:-21.0pt;line-height:15.15pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>辅助工具</span></p>

<p class=MsoListParagraph align=left style='margin-left:58.55pt;text-align:
left;text-indent:-21.0pt;line-height:15.15pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-size:12.0pt;font-family:"Times New Roman"'>tools/mksfs.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>：创建一个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>Simple FS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统格式的硬盘镜像。（理解此文件的实现细节对理解</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统很有帮助）</span></p>

<p class=MsoListParagraph align=left style='margin-left:37.55pt;text-align:
left;text-indent:-21.0pt;line-height:15.15pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>l<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>对内核其它模块的扩充</span></p>

<p class=MsoListParagraph align=left style='margin-top:.45pt;margin-right:6.0pt;
margin-bottom:0cm;margin-left:58.55pt;margin-bottom:.0001pt;text-align:left;
text-indent:-21.0pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-size:12.0pt;font-family:"Times New Roman"'>kern/process/proc<span
style='letter-spacing:-.25pt'>.[c</span>h]</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>：增加成员变量</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'> struct fs_struct *fs_struct</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，用于支持进程对文件的访问；重写了</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>do_execve load_icode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>等函数以支持执行文件系统中的文件。</span></p>

<p class=MsoListParagraph align=left style='margin-top:.45pt;margin-right:6.0pt;
margin-bottom:0cm;margin-left:58.55pt;margin-bottom:.0001pt;text-align:left;
text-indent:-21.0pt;line-height:15.6pt;text-autospace:none'><span
style='font-size:12.0pt;font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span style='font-size:12.0pt;font-family:"Times New Roman"'>kern/init/init.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>：<span style='letter-spacing:
-.25pt'>增加调用初始化文件系统的函数</span></span><span style='font-size:12.0pt;font-family:
"Times New Roman";letter-spacing:-.25pt'>fs_init</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>。</span></p>

<h1 style='line-height:normal'><span style='font-size:16.0pt;font-family:"Times New Roman"'>3.
</span><span lang=ZH-CN style='font-size:16.0pt;font-family:楷体'>文件系统设计与实现</span></h1>

<p class=MsoNormal align=left style='margin-left:5.65pt;text-align:left;
text-autospace:none'><b><span style='font-size:14.0pt;font-family:"Times New Roman"'>3.1 
ucore</span></b><b><span lang=ZH-CN style='font-size:14.0pt;font-family:楷体'>文件系统总体介绍</span></b></p>

<p class=MsoNormal align=left style='margin-top:.05pt;text-align:left;
line-height:6.0pt;text-autospace:none'><span style='font-size:6.0pt;font-family:
"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>操作系<span
style='letter-spacing:-.25pt'>统</span>中负责管理和<span style='letter-spacing:-.25pt'>存</span>储可长期保存<span
style='letter-spacing:-.25pt'>数据</span>的软<span style='letter-spacing:-.25pt'>件功能</span>模块称<span
style='letter-spacing:-.25pt'>为</span>文<span style='letter-spacing:-.25pt'>件</span>系统。在本次试验中，主要侧重文件系统的设计实现和对文件系统执行流程的分析与理解。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的文件系统模型源于</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>Havard</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>OS161</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的文件系统和</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>Linux</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统。但其实这二者都是源于传统的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>UNIX</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统设计。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>UNIX</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>提出了四个文件系统抽象概念：文件</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>(file)</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>、目录项</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>(dentry)</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>、索引节点</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>(inode)</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和安装点</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>(mount point)</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>文件：</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>UNIX</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>文件中的内容可理解为是一有序字节</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>buffer</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>，文件都有一个方便应用程序识别的文件名称（也称文件路径名）。典型的文件操作有读、写、创建和删除等。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>目录项：目录项不是目录，而是目录的组成部分。在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>UNIX</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中目录被看作一种特定的文件，而目录项是文件路径中的一部分。如一个文件路径名是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“/test/testfile”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，则包含的目录项为：根目录</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“/”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，目录</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“test”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和文件</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“testfile”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，这三个都是目录项。一般而言，目录项包含目录项的名字（文件名或目录名）和目录项的索引节点（见下面的描述）位置。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>索引节点：</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'>UNIX</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>将文件的相关元数据信息（如访问控制权限、大小、拥有者、创建时间、数据内容等等信息）存储在一个单独的数据结构中，该结构被称为索引节点。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>安装点：在</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'>UNIX</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>中，文件系统被安装在一个特定的文件路径位置，这个位置就是安装点。所有的已安装文件系统都作为根文件系统树中的叶子出现在系统中。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>上述抽象概念形成了</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>UNIX</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统的逻辑数据结构，并需要通过一个具体文件系统的架构设计与实现把上述信息映射并储存到磁盘介质上。一个具体的文件系统需要在磁盘布局也实现上述抽象概念。比如文件元数据信息存储在磁盘块中的索引节点上。当文件被载如内存时，内核需要使用磁盘块中的索引点来构造内存中的索引节点。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>模仿了</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>UNIX</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的文件系统设计，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的<span style='letter-spacing:
-.25pt'>文</span>件系统架构主要<span style='letter-spacing:-.25pt'>由</span>四部分组成：</span></p>

<p class=MsoListParagraph style='margin-top:0cm;margin-right:2.9pt;margin-bottom:
0cm;margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:
15.6pt;text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>通用文件系统访问接口层：该层提供了一个从用户空间到文件系统的标准访问接口。这一层访问接口让应用程序能够通过一个简单的接口获得</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>内核的文件系统服务。</span></p>

<p class=MsoListParagraph style='margin-top:0cm;margin-right:2.9pt;margin-bottom:
0cm;margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:
15.6pt;text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>文件系统抽象层：向上提供一个一致的接口给内核其他部分（文件系统相关的系统调用实现模块和其他内核功能模块）访问。向下提供一个同样的抽象函数指针列表和数据结构屏蔽不同文件系统的实现细节。</span></p>

<p class=MsoListParagraph style='margin-top:0cm;margin-right:2.9pt;margin-bottom:
0cm;margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:
15.6pt;text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>Simple FS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统层：一个基于索引方式的简单文件系统实例。向上通过各种具体函数实现以对应文件系统抽象层提出的抽象函数。向下访问外设接口</span></p>

<p class=MsoListParagraph style='margin-top:0cm;margin-right:2.9pt;margin-bottom:
0cm;margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:
15.6pt;text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>外设接口层：向上提供</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>device</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>访问接口屏蔽不同硬件细节。向下实现访问各种具体设备驱动的接口，比如</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>disk</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备接口</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>/</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>串口设备接口</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>/</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>键盘设备接口等。</span></p>

<p class=MsoNormal style='margin-right:2.9pt;text-indent:36.0pt;line-height:
15.6pt;text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>对照上面的层次我们再大致介绍一下文件系统的访问处理过程，加深对文件系统的总体理解。假如应用程序操作文件（打开</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>/</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>创建</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>/</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>删除</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>/</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>读写），首先需要通过文件系统的通用文件系统访问接口层给用户空间提供的访问接口进入文件系统内部，接着由文件系统抽象层把访问请求转发给某一具体文件系统（比如</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统），具体文件系统（</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>Simple FS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统层）把应用程序的访问请求转化为对磁盘上的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>block</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的处理请求，并通过外设接口层交给磁盘驱动例程来完成具体的磁盘操作。结合用户态写文件函数</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>write</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的整个执行过程，我们可以比较清楚地看出</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统架构的层次和依赖关系。</span></p>

<p class=MsoNormal align=center style='margin-top:0cm;margin-right:2.9pt;
margin-bottom:0cm;margin-left:6.0pt;margin-bottom:.0001pt;text-align:center;
text-indent:21.1pt;line-height:15.6pt;text-autospace:none'><img width=501
height=349 src="lab8.files/image001.png" align=left hspace=9><span
style='font-family:"Times New Roman"'><b>ucore</b></span><b><span lang=ZH-CN
style='font-family:楷体'>文件系统总体结构</span></b></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span style='font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>从</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>操作系统不同的角度来看，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中的文件系统架构包含四类主要的数据结构</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>, </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>它们分别是：</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>超级块（</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>SuperBlock</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>），它主要从文件系统的全局角度描述特定文件系统的全局信息。它的作用范围是整个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>OS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>空间。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>索引节点（</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'>inode</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>）：它主要从文件系统的单个文件的角度它描述了文件的各种属性和数据所在位置。它的作用范围是整个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>OS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>空间。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>目录项（</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>dentry</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>）：它主要从文件系统的文件路径的角度描述了文件路径中的特定目录。它的作用范围是整个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>OS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>空间。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:48.1pt;margin-bottom:.0001pt;text-indent:-21.0pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:Wingdings'>l<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>文件（</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>file</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>），它主要从进程的角度描述了一个进程在访问文件时需要了解的文件标识，文件读写的位置，文件引用情况等信息。它的作用范围是某一具体进程。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>如果一个用户进程打开了一个文件，那么在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中涉及的相关数据结构（其中相关数据结构将在下面各个小节中展开叙述）和关系如下图所示：</span></p>

<p class=MsoNormal align=center style='margin-top:0cm;margin-right:2.9pt;
margin-bottom:0cm;margin-left:6.0pt;margin-bottom:.0001pt;text-align:center;
text-indent:21.1pt;line-height:15.6pt;text-autospace:none'><img width=502
height=570 src="lab8.files/image002.png" align=left hspace=9><span
style='font-family:"Times New Roman"'><b>ucore</b></span><b><span lang=ZH-CN
style='font-family:楷体'>中文件相关关键数据结构及其关系</span></b></p>

<p class=cwj><b><span style='font-size:14.0pt;line-height:111%'>&nbsp;</span></b></p>

<p class=cwj><span style='font-size:12.0pt;line-height:111%'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:5.65pt;text-align:left;
text-autospace:none'><b><span style='font-size:14.0pt;font-family:"Times New Roman"'>3.2
</span></b><b><span lang=ZH-CN style='font-size:14.0pt;font-family:楷体'>通用文件系统访问接口</span></b></p>

<p class=cwj style='text-indent:0cm'><b><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>文件和目录相关用户库函数</span></b></p>

<p class=cwj><span style='font-size:12.0pt;line-height:111%'>Lab8</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>中部分用户库函数与文件系统有关，我们先讨论对单个文件进行操作的系统调用，然后讨论对目录和文件系统进行操作的系统调用。</span></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>在文件操作方面，最基本的相关函数是</span><span style='font-size:12.0pt;
line-height:111%'>open</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>、</span><span style='font-size:12.0pt;
line-height:111%'>close</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>、</span><span style='font-size:12.0pt;
line-height:111%'>read</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>、</span><span style='font-size:12.0pt;
line-height:111%'>write</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>。在读写一个文件之前，首先要用</span><span style='font-size:
12.0pt;line-height:111%'>open</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>系统调用将其打开。</span><span style='font-size:12.0pt;
line-height:111%'>open</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>的第一个参数指定文件的路径名，可使用绝对路径名；第二个参数指定打开的方式，可设置为</span><span
style='font-size:12.0pt;line-height:111%'>O_RDONLY</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>、</span><span
style='font-size:12.0pt;line-height:111%'>O_WRONLY</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>、</span><span
style='font-size:12.0pt;line-height:111%'>O_RDWR</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>，分别表示只读、只写、可读可写。在打开一个文件后，就可以使用它返回的文件描述符</span><span
style='font-size:12.0pt;line-height:111%'>fd</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>对文件进行相关操作。在使用完一个文件后，还要用</span><span
style='font-size:12.0pt;line-height:111%'>close</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>系统调用把它关闭，其参数就是文件描述符</span><span
style='font-size:12.0pt;line-height:111%'>fd</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>。这样它的文件描述符就可以空出来，给别的文件使用。</span></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>读写文件内容的系统调用是</span><span style='font-size:12.0pt;line-height:
111%'>read</span><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>和</span><span style='font-size:12.0pt;line-height:111%'>write</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>。</span><span
style='font-size:12.0pt;line-height:111%'>read</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>系统调用有三个参数：一个指定所操作的文件描述符，一个指定读取数据的存放地址，最后一个指定读多少个字节。在</span><span
style='font-size:12.0pt;line-height:111%'>C</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>程序中调用该系统调用的方法如下：</span></p>

<p class=cwj><span style='font-size:12.0pt;line-height:111%'>count =
read(filehandle, buffer, nbytes);</span></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>该系统调用会把实际读到的字节数返回给</span><span style='font-size:12.0pt;
line-height:111%'>count</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>变量。在正常情形下这个值与</span><span style='font-size:
12.0pt;line-height:111%'>nbytes</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>相等，但有时可能会小一些。例如，在读文件时碰上了文件结束符，从而提前结束此次读操作。</span></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>如果由于参数无效或磁盘访问错误等原因，使得此次系统调用无法完成，则</span><span style='font-size:
12.0pt;line-height:111%'>count</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>被置为</span><span style='font-size:12.0pt;
line-height:111%;font-family:Symbol'>-</span><span style='font-size:12.0pt;
line-height:111%'>1</span><span lang=ZH-CN style='font-size:12.0pt;line-height:
111%;font-family:楷体'>。而</span><span style='font-size:12.0pt;line-height:111%'>write</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>函数的参数与之完全相同。</span></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>对于目录而言，最常用的操作是跳转到某个目录，这里对应的用户库函数是</span><span style='font-size:
12.0pt;line-height:111%'>chdir</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>。然后就需要读目录的内容了，即列出目录中的文件或目录名，这在处理上与读文件类似，即需要通过</span><span
style='font-size:12.0pt;line-height:111%'>opendir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>函数打开目录，通过</span><span
style='font-size:12.0pt;line-height:111%'>readdir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>来获取目录中的文件信息，读完后还需通过</span><span
style='font-size:12.0pt;line-height:111%'>closedir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>函数来关闭目录。由于在</span><span
style='font-size:12.0pt;line-height:111%'>ucore</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>中把目录看成是一个特殊的文件，所以</span><span
style='font-size:12.0pt;line-height:111%'>opendir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>和</span><span
style='font-size:12.0pt;line-height:111%'>closedir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>实际上就是调用与文件相关的</span><span
style='font-size:12.0pt;line-height:111%'>open</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>和</span><span
style='font-size:12.0pt;line-height:111%'>close</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>函数。只有</span><span
style='font-size:12.0pt;line-height:111%'>readdir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>需要调用获取目录内容的特殊系统调用</span><span
style='font-size:12.0pt;line-height:111%'>sys_getdirentry</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>。而且这里没有写目录这一操作。在目录中增加内容其实就是在此目录中创建文件，需要用到创建文件的函数。</span></p>

<p class=cwj style='text-indent:0cm'><span style='font-size:12.0pt;line-height:
111%'>&nbsp;</span></p>

<p class=cwj style='text-indent:0cm'><b><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>文件和目录访问相关系统调用</span></b></p>

<p class=cwj style='text-indent:0cm'><span style='font-size:12.0pt;line-height:
111%'>    </span><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>与文件相关的</span><span style='font-size:12.0pt;line-height:111%'>open</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>、</span><span
style='font-size:12.0pt;line-height:111%'>close</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>、</span><span
style='font-size:12.0pt;line-height:111%'>read</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>、</span><span
style='font-size:12.0pt;line-height:111%'>write</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>用户库函数对应的是</span><span
style='font-size:12.0pt;line-height:111%'>sys_open</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>、</span><span
style='font-size:12.0pt;line-height:111%'>sys_close</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>、</span><span
style='font-size:12.0pt;line-height:111%'>sys_read</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>、</span><span
style='font-size:12.0pt;line-height:111%'>sys_write</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>四个系统调用接口。与目录相关的</span><span
style='font-size:12.0pt;line-height:111%'>readdir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>用户库函数对应的是</span><span
style='font-size:12.0pt;line-height:111%'>sys_getdirentry</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>系统调用。这些系统调用函数接口将通过</span><span
style='font-size:12.0pt;line-height:111%'>syscall</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>函数来获得</span><span
style='font-size:12.0pt;line-height:111%'>ucore</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的内核服务。当到了</span><span
style='font-size:12.0pt;line-height:111%'>ucore</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>内核后，在调用文件系统抽象层的</span><span
style='font-size:12.0pt;line-height:111%'>file</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>接口和</span><span
style='font-size:12.0pt;line-height:111%'>dir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>接口。</span></p>

<p class=MsoNormal align=left style='margin-left:5.65pt;text-align:left;
text-autospace:none'><b><span style='font-size:14.0pt;font-family:"Times New Roman"'>3.3 
Simple FS</span></b><b><span lang=ZH-CN style='font-size:14.0pt;font-family:
楷体'>文件系统</span></b></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>这里我们没有按照从上到下先讲文件系统抽象层，再讲具体的文件系统。这是由于如果能够理解</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>Simple FS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>（简称</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>）文件系统，就可更好地分析文件系统抽象层的设计。即从具体走向抽象。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>内核把所有文件都看作是字节流，任何内部逻辑结构都是专用的，由应用程序负责解释。但是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>区分文件的物理结构。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>目前支持如下几种类型的文件：</span></p>

<p class=MsoListParagraph style='margin-left:6.1pt;text-indent:9.25pt'><span
style='font-size:12.0pt;font-family:宋体'>●<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>常规文件：文件中包括的内容信息是由应用程序输入。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统在普通文件上不强加任何内部结构，把其文件内容信息看作为字节。</span></p>

<p class=MsoListParagraph style='margin-left:6.1pt;text-indent:9.25pt'><span
style='font-size:12.0pt;font-family:宋体'>●<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>目录：包含一系列的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>entry</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，每个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>entry</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>包含文件名和指向与之相关联的索引节点（</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>index node</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>）的指针。目录是按层次结构组织的。</span></p>

<p class=MsoListParagraph style='margin-left:6.1pt;text-indent:9.25pt'><span
style='font-size:12.0pt;font-family:宋体'>●<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>链接文件：实际上一个链接文件是一个已经存在的文件的另一个可选择的文件名。</span></p>

<p class=MsoListParagraph style='margin-left:6.1pt;text-indent:9.25pt'><span
style='font-size:12.0pt;font-family:宋体'>●<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备文件：不包含数据，但是提供了一个映射物理设备（如串口、键盘等）到一个文件名的机制。可通过设备文件访问外围设备。</span></p>

<p class=MsoListParagraph style='margin-left:6.1pt;text-indent:9.25pt'><span
style='font-size:12.0pt;font-family:宋体'>●<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>管道：管道是进程间通讯的一个基础设施。管道缓存了其输入端所接受的数据，以便在管道输出端读的进程能一个先进先出的方式来接受数据。</span></p>

<p class=MsoListParagraph style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>在</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>lab8</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>中关注的主要是</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'>SFS</span><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>支持的常规文件、目录和链接中的</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'> hardlink </span><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>的设计实现。</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统中目录和常规文件具有共同的属性，而这些属性保存在索引节点中。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>通过索引节点来管理目录和常规文件，索引节点包含操作系统所需要的关于某个文件的关键信息，比如文件的属性、访问许可权以及其它控制信息都保存在索引节点中。可以有多个文件名可指向一个索引节点。</span></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
style='font-size:12.0pt;font-family:"Times New Roman"'> 3.3.1</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统的布局</span></b></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>文件系统通常保存在磁盘上。在本实验中，第三个磁盘（即</span><span style='font-size:12.0pt;
line-height:111%'>disk0</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>，前两个磁盘分别是</span><span style='font-size:12.0pt;
line-height:111%'> ucore.img </span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>和</span><span style='font-size:12.0pt;
line-height:111%'> swap.img</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>）用于存放一个</span><span style='font-size:12.0pt;
line-height:111%'>SFS</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>文件系统（</span><span style='font-size:12.0pt;
line-height:111%'>Simple Filesystem</span><span lang=ZH-CN style='font-size:
12.0pt;line-height:111%;font-family:楷体'>）。通常文件系统中，磁盘的使用是以扇区（</span><span
style='font-size:12.0pt;line-height:111%'>Sector</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>）为单位的，但是为了实现简便，</span><span
style='font-size:12.0pt;line-height:111%'>SFS </span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>中以</span><span
style='font-size:12.0pt;line-height:111%'> block </span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>（</span><span
style='font-size:12.0pt;line-height:111%'>4K</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>，与内存</span><span
style='font-size:12.0pt;line-height:111%'> page </span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>大小相等）为基本单位。</span></p>

<p class=cwj><span style='font-size:12.0pt;line-height:111%'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>文件系统的布局如下图所示。</span></p>

<p class=cwj style='text-indent:0cm'><span><img width=441 height=31
id="_x0000_i1025" src="lab8.files/image003.png" hspace=7></span></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>第</span><span style='font-size:12.0pt;line-height:111%'>0</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>个块（</span><span
style='font-size:12.0pt;line-height:111%'>4K</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>）是超级块（</span><span
style='font-size:12.0pt;line-height:111%'>superblock</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>），它包含了关于文件系统的所有关键参数，当计算机被启动或文件系统被首次接触时，超级块的内容就会被装入内存。其定义如下：</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:26.7pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=399 valign=top style='width:399.1pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>struct sfs_super {</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>    uint32_t
  magic;                                                     /* magic number,
  should be SFS_MAGIC */</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>    uint32_t
  blocks;                                                    /* # of blocks in
  fs */</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>    uint32_t
  unused_blocks;                                        /* # of unused blocks
  in fs */</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>    char info[SFS_MAX_INFO_LEN +
  1];                /* infomation for sfs  */</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>};</span></p>
  </td>
 </tr>
</table>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>可以看到，包含一个成员变量魔数</span><span style='font-size:12.0pt;line-height:
111%'>magic</span><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>，其值为</span><span style='font-size:12.0pt;line-height:111%'>0x2f8dbe2a</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>，内核通过它来检查磁盘镜像是否是合法的</span><span
style='font-size:12.0pt;line-height:111%'> SFS img</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>；成员变量</span><span
style='font-size:12.0pt;line-height:111%'>blocks</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>记录了</span><span
style='font-size:12.0pt;line-height:111%'>SFS</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>中所有</span><span
style='font-size:12.0pt;line-height:111%'>block</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的数量，即</span><span
style='font-size:12.0pt;line-height:111%'> img </span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的大小；成员变量</span><span
style='font-size:12.0pt;line-height:111%'>unused_block</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>记录了</span><span
style='font-size:12.0pt;line-height:111%'>SFS</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>中还没有被使用的</span><span
style='font-size:12.0pt;line-height:111%'>block</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的数量；成员变量</span><span
style='font-size:12.0pt;line-height:111%'>info</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>包含了字符串</span><span
style='font-size:12.0pt;line-height:111%'>&quot;simple file system&quot;</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>。</span></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>第</span><span style='font-size:12.0pt;line-height:111%'>1</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>个块放了一个</span><span
style='font-size:12.0pt;line-height:111%'>root-dir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的</span><span
style='font-size:12.0pt;line-height:111%'>inode</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>，用来记录根目录的相关信息。有关</span><span
style='font-size:12.0pt;line-height:111%'>inode</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>还将在后续部分介绍。这里只要理解</span><span
style='font-size:12.0pt;line-height:111%'>root-dir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>是</span><span
style='font-size:12.0pt;line-height:111%'>SFS</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>文件系统的根结点，通过这个</span><span
style='font-size:12.0pt;line-height:111%'>root-dir</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的</span><span
style='font-size:12.0pt;line-height:111%'>inode</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>信息就可以定位并查找到根目录下的所有文件信息。</span></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>从第</span><span style='font-size:12.0pt;line-height:111%'>2</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>个块开始，根据</span><span
style='font-size:12.0pt;line-height:111%'>SFS</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>中所有块的数量，用</span><span
style='font-size:12.0pt;line-height:111%'>1</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>个</span><span
style='font-size:12.0pt;line-height:111%'>bit</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>来表示一个块的占用和未被占用的情况。这个区域称为</span><span
style='font-size:12.0pt;line-height:111%'>SFS</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的</span><span
style='font-size:12.0pt;line-height:111%'>freemap</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>区域，这将占用若干个块空间。为了更好地记录和管理</span><span
style='font-size:12.0pt;line-height:111%'>freemap</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>区域，专门提供了两个文件</span><span
style='font-size:12.0pt;line-height:111%'>kern/fs/sfs/bitmap.[ch]</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>来完成根据一个块号查找或设置对应的</span><span
style='font-size:12.0pt;line-height:111%'>bit</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>位的值。</span></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>最后在剩余的磁盘空间中，存放了所有其他目录和文件的</span><span style='font-size:12.0pt;
line-height:111%'>inode</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>信息和内容数据信息。需要注意的是虽然</span><span
style='font-size:12.0pt;line-height:111%'>inode</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的大小小于一个块的大小（</span><span
style='font-size:12.0pt;line-height:111%'>4096B</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>），但为了实现简单，每个</span><span
style='font-size:12.0pt;line-height:111%'> inode </span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>都占用一个完整的</span><span
style='font-size:12.0pt;line-height:111%'> block</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>在</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>sfs_fs.c</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>文件中的</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>sfs_do_mount</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>函数中，完成了加载位于硬盘上的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统的超级块</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>superblock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>freemap</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的工作。这样，在内存中就有了</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统的全局信息。</span></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
style='font-size:12.0pt;font-family:"Times New Roman"'> 3.3.2</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>索引节点</span></b></p>

<p class=MsoNormal style='text-indent:25.95pt'><b><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>磁盘索引节点</span></b></p>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>SFS</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>中的磁盘索引节点代表了一个实际位于磁盘上的文件。首先我们看看在硬盘上的索引节点的内容：</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:40.85pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=385 valign=top style='width:384.95pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>struct sfs_disk_inode {</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>    uint32_t
  size;                          </span><span lang=ZH-CN style='font-size:9.0pt;
  font-family:楷体'>如果</span><span style='font-size:9.0pt;font-family:"Times New Roman"'>inode</span><span
  lang=ZH-CN style='font-size:9.0pt;font-family:楷体'>表示常规文件，则</span><span
  style='font-size:9.0pt;font-family:"Times New Roman"'>size</span><span
  lang=ZH-CN style='font-size:9.0pt;font-family:楷体'>是文件大小</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>    uint16_t
  type;                                  inode</span><span lang=ZH-CN
  style='font-size:9.0pt;font-family:楷体'>的文件类型</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>    uint16_t
  nlinks;                               </span><span lang=ZH-CN
  style='font-size:9.0pt;font-family:楷体'>此</span><span style='font-size:9.0pt;
  font-family:"Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:
  9.0pt;font-family:楷体'>的硬链接数</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>    uint32_t
  blocks;                              </span><span lang=ZH-CN
  style='font-size:9.0pt;font-family:楷体'>此</span><span style='font-size:9.0pt;
  font-family:"Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:
  9.0pt;font-family:楷体'>的数据块数的个数</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>    uint32_t direct[SFS_NDIRECT];  </span><span
  lang=ZH-CN style='font-size:9.0pt;font-family:楷体'>此</span><span
  style='font-size:9.0pt;font-family:"Times New Roman"'>inode</span><span
  lang=ZH-CN style='font-size:9.0pt;font-family:楷体'>的直接数据块索引值（有</span><span
  style='font-size:9.0pt;font-family:"Times New Roman"'>SFS_NDIRECT</span><span
  lang=ZH-CN style='font-size:9.0pt;font-family:楷体'>个）</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>    uint32_t
  indirect;                            </span><span lang=ZH-CN
  style='font-size:9.0pt;font-family:楷体'>此</span><span style='font-size:9.0pt;
  font-family:"Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:
  9.0pt;font-family:楷体'>的一级间接数据块索引值</span></p>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-size:
  9.0pt;font-family:"Times New Roman"'>};</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>通过上表可以看出，如果</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>表示的是文件，则成员变量</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>direct[]</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>直接指向了保存文件内容数据的数据块索引值。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>indirect</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>间接指向了保存文件内容数据的数据块，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>indirect</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>指向的是间接数据块（</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>indirect block</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>），此数据块实际存放的全部是数据块索引，这些数据块索引指向的数据块才被用来存放文件内容数据。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>默认的，</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>ucore </span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>里</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>
SFS_NDIRECT </span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> 12</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，即直接索引的数据页大小为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> 12 * 4k = 48k</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>；当使用一级间接数据块索引时，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>支持最大的文件大小为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> 12 * 4k + 1024 * 4k =
48k + 4m</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。数据索引表内，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>0 </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>表示一个无效的索引，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>里</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> blocks </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>表示该文件或者目录占用的磁盘的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> block </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的个数。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>indiret </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> 0 </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>时，表示不使用一级索引块。（因为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> block 0 </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>用来保存</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> super block</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，它不可能被其他任何文件或目录使用，所以这么设计也是合理的）。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>对于普通文件，索引值指向的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> block </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中保存的是文件中的数据。而对于目录，索引值指向的数据保存的是目录下所有的文件名以及对应的索引节点所在的索引块（磁盘块）所形成的数组。数据结构如下：</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"Times New Roman"'>&nbsp;</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:40.85pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=383 valign=top style='width:382.75pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>/*
  file entry (on disk) */</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>struct
  sfs_disk_entry {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  uint32_t ino;                                                                
  </span><span lang=ZH-CN style='font-size:10.0pt;font-family:楷体'>索引节点所占数据块索引值</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  char name[SFS_MAX_FNAME_LEN + 1];               </span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>文件名</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>};</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>操作系统中，每个文件系统下的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>都应该分配唯一的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>编号。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>下，为了实现的简便（偷懒），每个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>直接用他所在的磁盘</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> block </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的编号作为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>编号。比如，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>root block </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>编号为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> 1</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>；每个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_disk_entry </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据结构中，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>name </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>表示目录下文件或文件夹的名称，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ino </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>表示磁盘</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> block </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>编号，通过读取该</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> block </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的数据，能够得到相应的文件或文件夹的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ino </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>0 </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>时，表示一个无效的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>此外，和</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'> inode </span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>相似，每个</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'> sfs_dirent_entry </span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>也占用一个</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'> block</span><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>。</span></p>

<p class=MsoNormal><span style='font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal><b><span lang=ZH-CN style='font-family:楷体'>内存中的索引节点</span></b></p>

<p class=MsoNormal><span style='font-family:"Times New Roman"'>&nbsp;</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:40.85pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=385 valign=top style='width:384.95pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>/*
  inode for sfs */</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>struct
  sfs_inode {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  struct sfs_disk_inode *din;                     /* on-disk inode */</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  uint32_t ino;                                   /* inode number */</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  uint32_t flags;                                 /* inode flags */</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  bool dirty;                                     /* true if inode modified */</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  int reclaim_count;                              /* kill inode if it hits zero
  */</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  semaphore_t sem;                                /* semaphore for din */</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  list_entry_t inode_link;                        /* entry for linked-list in
  sfs_fs */</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  list_entry_t hash_link;                         /* entry for hash linked-list
  in sfs_fs */</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>};</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:"Times New Roman"'>      </span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>可以看到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中的内存</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>包含了</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的硬盘</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>信息，而且还增加了其他一些信息，这属于是便于进行是判断否改写、互斥操作、回收和快速地定位等作用。需要注意，一个内存</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是在打开一个文件后才创建的，如果关机则相关信息都会消失。而硬盘</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的内容是保存在硬盘中的，只是在进程需要时才被读入到内存中，用于访问文件或目录的具体内容数据</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>为了方便实现上面提到的多级数据的访问以及目录中</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的操作，对</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>实现了一些辅助的函数：</span></p>

<p class=MsoNormal style='margin-left:60.0pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_bmap_load_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>：将对应</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的第</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> index </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>个索引指向的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> block </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的索引值取出存到相应的指针指向的单元（</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ino_store</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>）。该函数只接受</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> index &lt;=
inode-&gt;blocks </span><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>的参数。当</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>
index == inode-&gt;blocks </span><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>时，该函数理解为需要为</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'> inode </span><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>增长一个</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>
block</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。并标记</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> dirty</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>（所有对</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据的修改都要做这样的操作，这样，当</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>不再使用的时候，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>能够保证</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据能够被写回到磁盘）。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_bmap_load_nolock </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>调用的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_bmap_get_nolock </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>来完成相应的操作，阅读</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_bmap_get_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，了解他是如何工作的。（</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_bmap_get_nolock </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>只由</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_bmap_load_nolock </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>调用）</span></p>

<p class=MsoNormal style='margin-left:60.0pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_bmap_truncate_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>：将多级数据索引表的最后一个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>释放掉。他可以认为是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_bmap_load_nolock </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>index ==
inode-&gt;blocks </span><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>的逆操作。当一个文件或目录被删除时，</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>sfs
</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>会循环调用该函数直到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode-&gt;blocks </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>减为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> 0</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，释放所有的数据页。函数通过</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_bmap_free_nolock </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>来实现，他应该是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_bmap_get_nolock </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的逆操作。和</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_bmap_get_nolock </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>一样，调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_bmap_free_nolock </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>也要格外小心。</span></p>

<p class=MsoNormal style='margin-left:60.0pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_dirent_read_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>：将目录的第</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> slot </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>读取到指定的内存空间。他通过上面提到的函数来完成。</span></p>

<p class=MsoNormal style='margin-left:60.0pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_dirent_write_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>：用指定的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>来替换某个目录下的第</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> slot </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>entry</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。他通过调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> sfs_bmap_load_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>保证，当第</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> slot </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>entry </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>不存在时（</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>slot == inode-&gt;blocks</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>），</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>会分配一个新的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，即在目录尾添加了一个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。</span></p>

<p class=MsoNormal style='margin-left:60.0pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_dirent_search_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>：是常用的查找函数。他在目录下查找</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> name</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，并且返回相应的搜索结果（文件或文件夹）的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的编号（也是磁盘编号），和相应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>在该目录的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> index </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>编号以及目录下的数据页是否有空闲的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。（</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>实现里文件的数据页是连续的，不存在任何空洞；而对于目录，数据页不是连续的，当某个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>删除的时候，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>通过设置</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry-&gt;ino </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>0</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>将该</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>所在的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> block </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>标记为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> free</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，在需要添加新</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的时候，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>优先使用这些</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> free </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，其次才会去在数据页尾追加新的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> entry</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。</span></p>

<p class=MsoNormal style='margin-left:39.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-left:36.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>注意，这些后缀为</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'> nolock </span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>的函数，只能在已经获得相应</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>semaphore </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>才能调用。</span></p>

<p class=MsoNormal><span style='font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal><b><span style='font-family:"Times New Roman"'>Inode</span></b><b><span
lang=ZH-CN style='font-family:楷体'>的文件操作函数</span></b></p>

<p class=MsoNormal><span style='font-family:"Times New Roman"'>&nbsp;</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=426 valign=top style='width:425.8pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>static
  const struct inode_ops sfs_node_fileops = {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  .vop_magic                      = VOP_MAGIC,</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  .vop_open                       = sfs_openfile,</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  .vop_close                      = sfs_close,</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  .vop_read                       = sfs_read,</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  .vop_write                      = sfs_write,</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  ……</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>};</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>上述</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>sfs_openfile</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>、</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>sfs_close</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>、</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>sfs_read</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>和</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>sfs_write</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>分别对应用户进程发出的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>、</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>close</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>、</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>、</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>write</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>操作。其中</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_openfile</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>不用做什么事；</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_close</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>需要把对文件的修改内容写回到硬盘上，这样确保硬盘上的文件内容数据是最新的；</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_write</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数都调用了一个函数</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_io</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，并最终通过访问硬盘驱动来完成对文件内容数据的读写。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal><b><span style='font-family:"Times New Roman"'>Inode</span></b><b><span
lang=ZH-CN style='font-family:楷体'>的目录操作函数</span></b></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=426 valign=top style='width:425.8pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>static
  const struct inode_ops sfs_node_dirops = {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  .vop_magic                      = VOP_MAGIC,</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  .vop_open                       = sfs_opendir,</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  .vop_close                      = sfs_close,</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  .vop_getdirentry                = sfs_getdirentry,</span></p>
  <p class=MsoNormal style='text-indent:9.75pt'><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>.vop_lookup                     = sfs_lookup,                            </span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  ……</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>};</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>对于目录操作而言，由于目录也是一种文件，所以</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_opendir</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>、</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sys_close</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>对应户进程发出的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>、</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>close</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数。相对于</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_opendir</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>只是完成一些</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数传递的参数判断，没做其他更多的事情。目录的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>close</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>操作与文件的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>close</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>操作完全一致。由于目录的内容数据与文件的内容数据不同，所以读出目录的内容数据的函数是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_getdirentry</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，其主要工作是获取目录下的文件</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>信息。</span></p>

<p class=MsoNormal align=left style='margin-left:5.65pt;text-align:left;
text-autospace:none'><b><span style='font-size:14.0pt;font-family:"Times New Roman"'>3.4 
</span></b><b><span lang=ZH-CN style='font-size:14.0pt;font-family:楷体'>文件系统抽象层</span></b><b><span
style='font-size:14.0pt;font-family:"Times New Roman"'>-VFS</span></b></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统抽象层是把不同文件系统的对外共性接口提取出来，形成一个函数指针数组，这样，通用文件系统访问接口层只需访问文件系统抽象层，而不需关心具体文件系统的实现细节和接口。</span></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3.4.1 file&amp;dir</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>接口</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:"Times New Roman"'> </span></b></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:"Times New Roman"'>file&amp;dir</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>接口层定义了进程在内核中直接访问的文件相关信息，这定义在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据结构中，具体描述如下：</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:6.0pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=420 valign=top style='width:419.8pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>struct
  file {</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    enum {</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    }
  status;                          //</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>访问文件的执行状态</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    bool
  readable;                     //</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>文件是否可读</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    bool
  writable;                     //</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>文件是否可写</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    int
  fd;                           //</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>文件在</span><span style='font-size:10.0pt;font-family:
  "Times New Roman"'>filemap</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>中的索引值</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    off_t
  pos;                        //</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>访问文件的当前位置</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    struct
  inode *node;               //</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>该文件对应的内存</span><span style='font-size:10.0pt;font-family:
  "Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>指针</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  atomic_t open_count;              //</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>打开此文件的次数</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>};</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>而在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>kern/process/proc.h</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>proc_struct</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>结构中描述了进程访问文件的数据接口</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> fs_struct</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，其数据结构定义如下：</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:6.0pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=420 valign=top style='width:419.8pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>struct
  fs_struct {</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    struct
  inode *pwd;                //</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>进程当前执行目录的内存</span><span style='font-size:10.0pt;font-family:
  "Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>指针</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    struct
  file *filemap;             //</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>进程打开文件的数组</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  atomic_t fs_count;                //</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>访问此文件的线程个数？？</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  semaphore_t fs_sem;                //</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>确保对进程控制块中</span><span
  style='font-size:10.0pt;font-family:"Times New Roman"'>fs_struct</span><span
  lang=ZH-CN style='font-size:10.0pt;font-family:楷体'>的互斥访问</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>};</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>当创建一个进程后，该进程的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fs_struct</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>将会被初始化或复制父进程的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fs_struct</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。当用户进程打开一个文件时，将从</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>filemap</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数组中取得一个空闲</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>项，然后会把此</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的成员变量</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>node</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>指针指向一个代表此文件的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的起始地址。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span style='font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3.4.2 inode</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>接口</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:"Times New Roman"'> </span></b></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:"Times New Roman"'>index
node</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是位于内存的索引节点，它是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>VFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>结构中的重要数据结构，因为它实际负责把不同文件系统的特定索引节点信息（甚至不能算是一个索引节点）统一封装起来，避免了进程直接访问具体文件系统。其定义如下：</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:6.0pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=420 valign=top style='width:419.8pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>struct
  inode {</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    union
  {                                 //</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>包含不同文件系统特定</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>信息的</span><span style='font-size:10.0pt;font-family:
  "Times New Roman"'>union</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>成员变量</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>        struct
  device __device_info;          //</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>设备文件系统内存</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>信息</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  struct sfs_inode __sfs_inode_info;    //SFS</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>文件系统内存</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>inode</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>信息</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    }
  in_info;    </span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    enum {</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  inode_type_device_info = 0x1234,</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  inode_type_sfs_inode_info,</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    }
  in_type;                          //</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>此</span><span style='font-size:10.0pt;font-family:
  "Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>所属文件系统类型</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  atomic_t ref_count;                 //</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>此</span><span style='font-size:10.0pt;
  font-family:"Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>的引用计数</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  atomic_t open_count;                //</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>打开此</span><span style='font-size:
  10.0pt;font-family:"Times New Roman"'>inode</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>对应文件的个数</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    struct
  fs *in_fs;                   //</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>抽象的文件系统，包含访问文件系统的函数指针</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    const
  struct inode_ops *in_ops;     //</span><span lang=ZH-CN style='font-size:
  10.0pt;font-family:楷体'>抽象的</span><span style='font-size:10.0pt;font-family:
  "Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>操作，包含访问</span><span style='font-size:10.0pt;font-family:"Times New Roman"'>inode</span><span
  lang=ZH-CN style='font-size:10.0pt;font-family:楷体'>的函数指针</span><span
  style='font-size:10.0pt;font-family:"Times New Roman"'>      </span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>};</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中，有一成员变量为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>in_ops</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，这是对此</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的操作函数指针列表，其数据结构定义如下：</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:6.0pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=420 valign=top style='width:419.8pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>struct
  inode_ops {</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  unsigned long vop_magic;</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    int
  (*vop_open)(struct inode *node, uint32_t open_flags);</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    int
  (*vop_close)(struct inode *node);</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    int
  (*vop_read)(struct inode *node, struct iobuf *iob);</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    int
  (*vop_write)(struct inode *node, struct iobuf *iob);</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    int
  (*vop_getdirentry)(struct inode *node, struct iobuf *iob);</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>    int
  (*vop_create)(struct inode *node, const char *name, bool excl, struct inode
  **node_store);</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;text-indent:10.0pt;line-height:
  15.6pt;text-autospace:none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>int
  (*vop_lookup)(struct inode *node, char *path, struct inode **node_store);</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;text-indent:20.25pt;line-height:
  15.6pt;text-autospace:none'><span style='font-size:10.0pt;font-family:"Times New Roman"'>……</span></p>
  <p class=MsoNormal style='margin-right:2.9pt;line-height:15.6pt;text-autospace:
  none'><span style='font-size:10.0pt;font-family:"Times New Roman"'> };</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>参照上面对</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中的索引节点操作函数的说明，可以看出</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode_ops</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是对常规文件、目录、设备文件所有操作的一个抽象函数表示。对于某一具体的文件系统中的文件或目录，只需实现相关的函数，就可以被用户进程访问具体的文件了，且用户进程无需了解具体文件系统的实现细节。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:5.65pt;text-align:left;
text-autospace:none'><b><span style='font-size:14.0pt;font-family:"Times New Roman"'>3.5
</span></b><b><span lang=ZH-CN style='font-size:14.0pt;font-family:楷体'>设备层文件</span></b><b><span
style='font-size:14.0pt;font-family:"Times New Roman"'>IO</span></b><b><span
lang=ZH-CN style='font-size:14.0pt;font-family:楷体'>层</span></b></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>在本实验中，为了统一地访问设备，我们可以把一个设备看成一个文件，通过访问文件的接口来访问设备。目前实现了</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdin</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备文件文件、</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdout</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备文件、</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>disk0</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdin</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备就是键盘，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdout</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备就是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>CONSOLE</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>（串口、并口和文本显示器），而</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>disk0</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备是承载</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统的磁盘设备。下面我们逐一分析</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是如何让用户把设备看成文件来访问。</span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3.5.1 </span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>关键数据结构</span></b></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>为了表示一个设备，需要有对应的数据结构，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>为此定义了</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>struct device</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，其描述如下：</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=426 valign=top style='width:426.1pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>struct
  device {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  size_t d_blocks;    //</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>设备占用的数据块个数</span><span style='font-size:10.0pt;font-family:
  "Times New Roman"'>             </span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  size_t d_blocksize;  //</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:楷体'>数据块的大小</span><span lang=ZH-CN style='font-size:10.0pt;
  font-family:"Times New Roman"'> </span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  int (*d_open)(struct device *dev, uint32_t open_flags);  <a name="OLE_LINK11">//</a></span><span
  lang=ZH-CN style='font-size:10.0pt;font-family:楷体'>打开设备的函数指针</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  int (*d_close)(struct device *dev); //</span><span lang=ZH-CN
  style='font-size:10.0pt;font-family:楷体'>关闭设备的函数指针</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  int (*d_io)(struct device *dev, struct iobuf *iob, bool write); //</span><span
  lang=ZH-CN style='font-size:10.0pt;font-family:楷体'>读写设备的函数指针</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  int (*d_ioctl)(struct device *dev, int op, void *data); //</span><span
  lang=ZH-CN style='font-size:10.0pt;font-family:楷体'>用</span><span
  style='font-size:10.0pt;font-family:"Times New Roman"'>ioctl</span><span
  lang=ZH-CN style='font-size:10.0pt;font-family:楷体'>方式控制设备的函数指针</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>};</span></p>
  </td>
 </tr>
</table>

<p style='text-align:justify;text-justify:inter-ideograph'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>这个数据结构能够支持对块设备（比如磁盘）、字符设备（比如键盘、串口）的表示，完成对设备的基本操作。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>虚拟文件系统为了把这些设备链接在一起，还定义了一个设备链表，即双向链表</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vdev_list</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，这样通过访问此链表，可以找到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>能够访问的所有设备文件。</span></p>

<p style='text-align:justify;text-justify:inter-ideograph'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>但这个设备描述没有与文件系统以及表示一个文件的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据结构建立关系，为此，还需要另外一个数据结构把</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>device</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>联通起来，这就是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vfs_dev_t</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据结构：</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=534 valign=top style='width:533.8pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><i><span
  style='font-size:10.0pt;font-family:Courier;color:blue'>//&nbsp;device&nbsp;info&nbsp;entry&nbsp;in&nbsp;vdev_list&nbsp;<br>
  </span></i><b><span style='font-size:10.0pt;font-family:Courier;color:navy'>typedef</span></b><span
  style='font-size:10.0pt;font-family:Courier;color:gray'>&nbsp;</span><b><span
  style='font-size:10.0pt;font-family:Courier;color:navy'>struct</span></b><span
  style='font-size:10.0pt;font-family:Courier;color:gray'>&nbsp;</span><b><span
  style='font-size:10.0pt;font-family:Courier'>{</span></b><span
  style='font-size:10.0pt;font-family:Courier;color:gray'><br>
  &nbsp;&nbsp;&nbsp;&nbsp;</span><b><span style='font-size:10.0pt;font-family:
  Courier;color:navy'>const</span></b><span style='font-size:10.0pt;font-family:
  Courier;color:gray'>&nbsp;</span><b><span style='font-size:10.0pt;font-family:
  Courier;color:navy'>char</span></b><span style='font-size:10.0pt;font-family:
  Courier;color:gray'>&nbsp;</span><b><span style='font-size:10.0pt;font-family:
  Courier'>*</span></b><span style='font-size:10.0pt;font-family:Courier'>devname<b>;</b><span
  style='color:gray'><br>
  &nbsp;&nbsp;&nbsp;&nbsp;</span><b><span style='color:navy'>struct</span></b><span
  style='color:gray'>&nbsp;</span>inode<span style='color:gray'>&nbsp;</span><b>*</b>devnode<b>;</b><span
  style='color:gray'><br>
  &nbsp;&nbsp;&nbsp;&nbsp;</span><b><span style='color:navy'>struct</span></b><span
  style='color:gray'>&nbsp;</span>fs<span style='color:gray'>&nbsp;</span><b>*</b>fs<b>;</b><span
  style='color:gray'><br>
  &nbsp;&nbsp;&nbsp;&nbsp;</span>bool<span style='color:gray'>&nbsp;</span>mountable<b>;</b><span
  style='color:gray'><br>
  &nbsp;&nbsp;&nbsp;&nbsp;</span>list_entry_t<span style='color:gray'>&nbsp;</span>vdev_link<b>;</b><span
  style='color:gray'><br>
  </span><b>}</b><span style='color:gray'>&nbsp;</span>vfs_dev_t<b>;</b></span></p>
  </td>
 </tr>
</table>

<p style='text-align:justify;text-justify:inter-ideograph'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>利用</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>vfs_dev_t</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>数据结构，就可以让文件系统通过一个链接</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vfs_dev_t</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>结构的双向链表找到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>device</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>对应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据结构，一个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>节点的成员变量</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>in_type</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:windowtext'>的值</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>0x1234</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，则此</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的成员变量</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>in_info</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>将成为一个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>device</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>结构。这样</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>就和一个设备建立了联系，这个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>就是一个设备文件。</span></p>

<p style='text-align:justify;text-justify:inter-ideograph'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3.5.2stdout</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备文件</span></b></p>

<p class=MsoNormal><a name="OLE_LINK23"><a name="OLE_LINK22"><b><span
style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></b></a></a></p>

<p class=MsoNormal><b><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>初始化</span></b></p>

<p class=MsoNormal style='text-indent:21.75pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>既然</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>stdout</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>设备是设备文件系统的文件，自然有自己的</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>结构。在系统初始化时，即只需如下处理过程</span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>kern_init--&gt;fs_init--&gt;dev_init<a
name="OLE_LINK69"><a name="OLE_LINK68">--&gt;</a>dev_init_stdout --&gt; dev_create_inode</a></span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>                                                                              
--&gt; stdout_device_init</span></p>

<p class=MsoNormal style='text-indent:21.75pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>                                                                              
--&gt; vfs_add_dev</span></p>

<p class=MsoNormal style='text-indent:18.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>在</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>dev_init_stdout</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>中完成了对</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'>stdout</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>设备文件的初始化。即首先创建了一个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，然后通过</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdout_device_init</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>完成对</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中的成员变量</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode-&gt;__device_info</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>进行初始：</span></p>

<p class=MsoNormal style='text-indent:18.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>这里的</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>stdout</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>设备文件实际上就是指的</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>console</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>外设（它其实是串口、并口和</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>CGA</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>的组合型外设）。这个设备文件是一个只写设备，如果读这个设备，就会出错。接下来我们看看</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdout</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备的相关处理过程。</span></p>

<p class=MsoNormal><b><span style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></b></p>

<p class=MsoNormal><a name="OLE_LINK27"><a name="OLE_LINK26"><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>初始化</span></b></a></a></p>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>stdout</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>设备文件的初始化过程主要由</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>stdout_device_init</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>完成，其具体实现如下：</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:62.1pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=364 valign=top style='width:364.0pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>static
  void</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>stdout_device_init(struct
  device *dev) {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_blocks = 0;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_blocksize = 1;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_open = <a name="OLE_LINK25"><a name="OLE_LINK24">stdout_open</a>;</a></span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_close = stdout_close;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_io = stdout_io;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_ioctl = stdout_ioctl;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>}</span></p>
  </td>
 </tr>
</table>

<p><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>可以看到，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdout_open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数完成设备文件打开工作，如果发现用户进程调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数的参数</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>flags</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>不是只写（</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>O_WRONLY</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>），则会报错。</span></p>

<p class=MsoNormal><b><span style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></b></p>

<p class=MsoNormal><b><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>访问操作实现</span></b></p>

<p><span style='font-size:12.0pt;font-family:"Times New Roman"'>stdout_io</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数完成设<a name="OLE_LINK31"><a
name="OLE_LINK28">备的写操作工作，具体实现如下：</a></a></span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=426 valign=top style='width:426.1pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p><span style='font-size:10.0pt;font-family:"Times New Roman";color:windowtext'>static
  int</span></p>
  <p><span style='font-size:10.0pt;font-family:"Times New Roman";color:windowtext'>stdout_io(struct
  device *dev, struct iobuf *iob, bool write) {</span></p>
  <p><span style='font-size:10.0pt;font-family:"Times New Roman";color:windowtext'>   
  if (write) {</span></p>
  <p><span style='font-size:10.0pt;font-family:"Times New Roman";color:windowtext'>       
  char *data = iob-&gt;io_base;</span></p>
  <p><span style='font-size:10.0pt;font-family:"Times New Roman";color:windowtext'>       
  for (; iob-&gt;io_resid != 0; iob-&gt;io_resid --) {</span></p>
  <p><span style='font-size:10.0pt;font-family:"Times New Roman";color:windowtext'>           
  cputchar(*data ++);</span></p>
  <p><span style='font-size:10.0pt;font-family:"Times New Roman";color:windowtext'>       
  }</span></p>
  <p><span style='font-size:10.0pt;font-family:"Times New Roman";color:windowtext'>       
  return 0;</span></p>
  <p><span style='font-size:10.0pt;font-family:"Times New Roman";color:windowtext'>   
  }</span></p>
  <p><span style='font-size:10.0pt;font-family:"Times New Roman";color:windowtext'>   
  return -E_INVAL;</span></p>
  <p style='text-indent:0cm'><span style='font-size:10.0pt;font-family:"Times New Roman";
  color:windowtext'>}</span></p>
  </td>
 </tr>
</table>

<p style='text-align:justify;text-justify:inter-ideograph'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体;color:windowtext'>可以看到，要写的数据放在</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>iob-&gt;io_base</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:windowtext'>所指的内存区域，一直写到</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>iob-&gt;io_resid</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:windowtext'>的值为</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>0</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:windowtext'>为止。每次写操作都是通过</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>cputchar</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:windowtext'>来完成的，此函数最终将通过</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>console</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:windowtext'>外设驱动来完成把数据输出到串口、并口和</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>CGA</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:windowtext'>显示器上过程。另外，也可以注意到，如果用户想执行读操作，则</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdout_io</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数直接返回错误值</span><b><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>-</span></b><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>E_INVAL</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;color:windowtext'>。</span></p>

<p style='text-align:justify;text-justify:inter-ideograph'><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>&nbsp;</span></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3.5.3 stdin</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备文件</span></b></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>这里的</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>stdin</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>设备文件实际上就是指的键盘。这个设备文件是一个只读设备，如果写这个设备，就会出错。接下来我们看看</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdin</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>设备的相关处理过程。</span></p>

<p class=MsoNormal><b><span style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></b></p>

<p class=MsoNormal><b><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>初始化</span></b></p>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>stdin</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>设备文件的初始化过程主要由</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>stdin_device_init</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>完成了主要的初始化工作，具体实现如下：</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=426 valign=top style='width:426.1pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>static
  void</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>stdin_device_init(struct
  device *dev) {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_blocks = 0;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_blocksize = 1;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_open = stdin_open;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_close = stdin_close;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_io = stdin_io;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  dev-&gt;d_ioctl = stdin_ioctl;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  p_rpos = p_wpos = 0;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  wait_queue_init(wait_queue);</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>}</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>  
</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>相对于</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdout</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的初始化过程，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdin</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的初始化相对复杂一些，多了一个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdin_buffer</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>缓冲区，描述缓冲区读写位置的变量</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>p_rpos</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>、</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>p_wpos</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>以及用于等待缓冲区的等待队列</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>wait_queue</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>stdin_device_init</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数的初始化中，也完成了对</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>p_rpos</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>、</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>p_wpos</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>wait_queue</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的初始化。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal><b><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>访问操作实现</span></b></p>

<p class=MsoNormal style='text-indent:21.0pt;line-height:18.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>stdin_io</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>函数负责完成设</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>备的读操作工作，具体实现如下：</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=426 valign=top style='width:426.1pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>static
  int</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>stdin_io(struct
  device *dev, struct iobuf *iob, bool write) {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  if (!write) {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  int ret;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  if ((ret = dev_stdin_read(iob-&gt;io_base, iob-&gt;io_resid)) &gt; 0) {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>           
  iob-&gt;io_resid -= ret;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  }</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  return ret;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  }</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  return -E_INVAL;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>}</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='text-indent:21.0pt;line-height:18.0pt'><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>可以看到，如果是写操作，则</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>stdin_io</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>函数直接报错返回。所以这也进一步说明了此设备文件是只读文件。如果此读操作，则此函数进一步调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>dev_stdin_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>函数完成对键盘设备的读入操作。</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>dev_stdin_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>函数的实现相对复杂一些，主要的流程如下：</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=426 valign=top style='width:426.1pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>static
  int</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>dev_stdin_read(char
  *buf, size_t len) {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  int ret = 0;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  bool intr_flag;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  local_intr_save(intr_flag);</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  for (; ret &lt; len; ret ++, p_rpos ++) {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  try_again:</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>           
  if (<a name="OLE_LINK33"><a name="OLE_LINK32">p_rpos &lt; p_wpos</a>) {</a></span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>               
  *buf ++ = stdin_buffer[p_rpos % stdin_BUFSIZE];</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>           
  }</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>           
  else {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>               
  wait_t __wait, *wait = &amp;__wait;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>               
  wait_current_set(wait_queue, wait, WT_KBD);</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>               
  local_intr_restore(intr_flag);</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>               
  schedule();</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>               
  local_intr_save(intr_flag);</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>               
  wait_current_del(wait_queue, wait);</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>               
  if (wait-&gt;wakeup_flags == WT_KBD) {</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>                   
  goto try_again;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>               
  }</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>               
  break;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>           
  }</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>       
  }</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  } </span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  local_intr_restore(intr_flag);</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>   
  return ret;</span></p>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>}</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='text-indent:21.0pt;line-height:18.0pt'><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>在上述函数中可以看出，如果</span><a
name="OLE_LINK35"><a name="OLE_LINK34"><span style='font-size:12.0pt;
font-family:"Times New Roman";layout-grid-mode:line'>p_rpos &lt; p_wpos</span></a></a><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>，则表示有键盘输入的新字符在</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>stdin_buffer</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>中，于是就从</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>stdin_buffer</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>中取出新字符放到</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>iobuf</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>指向的缓冲区中；如果</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>p_rpos
&gt;=p_wpos</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体;
layout-grid-mode:line'>，则表明没有新字符，这样调用</span><span style='font-size:12.0pt;
font-family:"Times New Roman";layout-grid-mode:line'>read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>用户态库函数的用户进程就需要采用等待队列的睡眠操作进入睡眠状态，等待键盘输入字符的产生。</span></p>

<p style='text-align:justify;text-justify:inter-ideograph'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>键盘输入字符后，如何唤醒等待键盘输入的用户进程呢？回顾</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>lab1</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>中的外设中断处理，可以了解到，当用户敲击键盘时，会产生键盘中断，在</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>trap_dispatch</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>函数中，当识别出中断是键盘中断（中断号为</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>IRQ_OFFSET</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:gray'>&nbsp;</span><b><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>+</span></b><span
style='font-size:12.0pt;font-family:"Times New Roman";color:gray'>&nbsp;</span><span
style='font-size:12.0pt;font-family:"Times New Roman";color:windowtext'>IRQ_KBD</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>）时，会调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>dev_stdin_write</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>函数，来把字符写入到</span><span
style='font-size:12.0pt;font-family:"Times New Roman";layout-grid-mode:line'>stdin_buffer</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体;layout-grid-mode:line'>中，且会通过等待队列的唤醒操作唤醒正在等待键盘输入的用户进程。</span></p>

<p class=MsoNormal style='text-indent:21.0pt;line-height:18.0pt'><b><span
style='font-size:14.0pt;font-family:"Times New Roman"'>&nbsp;</span></b></p>

<p class=MsoNormal style='margin-left:5.65pt;text-autospace:none'><b><span
style='font-size:14.0pt'>3.6 </span></b><b><span lang=ZH-CN style='font-size:
14.0pt;font-family:楷体'>实验执行流程概述</span></b></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>与实验七相比，实验八增加了文件系统，并因此实现了通过文件系统来加载可执行文件到内存中运行的功能，导致对进程管理相关的实现比较大的调整。我们来简单看看文件系统是如何初始化并能在</span><span
style='font-size:12.0pt;line-height:111%'>ucore</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的管理下正常工作的。</span></p>

<p class=cwj><span lang=ZH-CN style='font-size:12.0pt;line-height:111%;
font-family:楷体'>首先看看</span><span style='font-size:12.0pt;line-height:111%'>kern_init</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>函数，可以发现与</span><span
style='font-size:12.0pt;line-height:111%'>lab7</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>相比增加了对</span><a
name="OLE_LINK2"><a name="OLE_LINK1"><span style='font-size:12.0pt;line-height:
111%'>fs_init</span></a></a><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>函数的调用。</span><span style='font-size:12.0pt;
line-height:111%'>fs_init</span><span lang=ZH-CN style='font-size:12.0pt;
line-height:111%;font-family:楷体'>函数就是文件系统初始化的总控函数，它进一步调用了虚拟文件系统初始化函数</span><span
style='font-size:12.0pt;line-height:111%'>vfs_init</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>，与文件相关的设备初始化函数</span><span
style='font-size:12.0pt;line-height:111%'>dev_init</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>和</span><span
style='font-size:12.0pt;line-height:111%'>Simple FS</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>文件系统的初始化函数</span><span
style='font-size:12.0pt;line-height:111%'>sfs_init</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>。这三个初始化函数联合在一起，协同完成了整个虚拟文件系统、</span><span
style='font-size:12.0pt;line-height:111%'>SFS</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>文件系统和文件系统对应的设备<a
name="OLE_LINK4"><a name="OLE_LINK3">（键盘、串口、磁盘）</a>的初始化工作。其函数调用关系图如下所示：</a></span></p>

<p class=cwj><span style='font-size:12.0pt;line-height:111%'>&nbsp;</span></p>

<p class=cwj align=center style='text-align:center'><span style='font-size:
12.0pt;line-height:111%'><img width=467 height=402 id="_x0000_i1026"
src="lab8.files/image004.png"></span></p>

<p class=cwj align=center style='text-align:center'><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>文件系统初始化调用关系图</span></p>

<p class=cwj><span style='font-size:12.0pt;line-height:111%'>  </span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>参考上图，并结合源码分析，可大致了解到文件系统的整个初始化流程。</span><span
style='font-size:12.0pt;line-height:111%'>vfs_init</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>主要建立了一个</span><span
style='font-size:12.0pt;line-height:111%'>device list</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>双向链表</span><span
style='font-size:12.0pt;line-height:111%'>vdev_list</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>，为后续具体设备（键盘、串口、磁盘）以文件的形式呈现建立查找访问通道。</span><span
style='font-size:12.0pt;line-height:111%'>dev_init</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>函数通过进一步调用</span><span
style='font-size:12.0pt;line-height:111%'>disk0/stdin/stdout_device_init</span><span
lang=ZH-CN style='font-size:12.0pt;line-height:111%;font-family:楷体'>完成对具体设备的初始化，把它们抽象成一个设备文件，并建立对应的</span><span
style='font-size:12.0pt;line-height:111%'>inode</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>数据结构，最后把它们链入到</span><span
style='font-size:12.0pt;line-height:111%'>vdev_list</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>中。这样通过虚拟文件系统就可以方便地以文件的形式访问这些设备了。</span><span
style='font-size:12.0pt;line-height:111%'>sfs_init</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>是完成对</span><span
style='font-size:12.0pt;line-height:111%'>Simple FS</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的初始化工作，并把此实例文件系统挂在虚拟文件系统中，从而让</span><span
style='font-size:12.0pt;line-height:111%'>ucore</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>的其他部分能够通过访问虚拟文件系统的接口来进一步访问到</span><span
style='font-size:12.0pt;line-height:111%'>SFS</span><span lang=ZH-CN
style='font-size:12.0pt;line-height:111%;font-family:楷体'>实例文件系统。</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.9pt;margin-bottom:0cm;
margin-left:6.0pt;margin-bottom:.0001pt;text-indent:21.1pt;line-height:15.6pt;
text-autospace:none'><span style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:5.65pt;text-align:left;
text-autospace:none'><b><span style='font-size:14.0pt;font-family:"Times New Roman"'>3.7</span></b><b><span
lang=ZH-CN style='font-size:14.0pt;font-family:楷体'>文件操作实现</span></b></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3.7.1 </span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>打开文件</span></b></p>

<p class=MsoNormal><span style='font-family:"Times New Roman"'>      </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>有了上述分析后，我们可以看看如果一个用户进程打开文件会做哪些事情？首先假定用户进程需要打开的文件已经存在在硬盘上。以</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>user/sfs_filetest1.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>为例，首先用户进程会调用在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>main</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数中的如下语句：</span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:19.6pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=376 valign=top style='width:375.65pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Times New Roman"'>int
  fd1 = safe_open(&quot;/test/testfile&quot;, O_RDWR | O_TRUNC);</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:"Times New Roman"'>       </span><span
style='font-size:12.0pt;font-family:"Times New Roman"'> </span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>从字面上可以看出，如果</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ucore</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>能够正常查找到这个文件，就会返回一个代表文件的文件描述符</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fd1</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，这样在接下来的读写文件过程中，就直接用这样</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fd1</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>来代表就可以了。那这个打开文件的过程是如何一步一步实现的呢？</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal><b><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>通用文件访问接口层的处理流程</span></b></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>首先进入通用文件访问接口层的处理流程，即进一步调用如下用户态函数：</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>
open-&gt;sys_open-&gt;syscall</span><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>，</span><span lang=ZH-CN style='font-size:12.0pt;font-family:
"Times New Roman"'> </span><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>从而引起系统调用进入到内核态。到了内核态后，通过中断处理例程，会调用到</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>sys_open</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>内核函数，并进一步调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sysfile_open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>内核函数。到了这里，需要把位于用户空间的字符串</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>&quot;/test/testfile&quot;</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>拷贝到内核空间中的字符串</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>path</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中，并进入到文件系统抽象层的处理流程完成进一步的打开文件操作中。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal><b><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>文件系统抽象层的处理流程</span></b></p>

<p class=MsoListParagraph style='margin-left:25.75pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>分配一个空闲的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据结构变量</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span></p>

<p class=MsoNormal style='text-indent:18.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'> </span><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>在文件系统抽象层的处理中，首先调用的是</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>file_open</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>函数，它要给这个即将打开的文件分配一个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据结构的变量，这个变量其实是当前进程的打开文件数组</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>current-&gt;fs_struct-&gt;filemap[]</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中的一个空闲元素（即还没用于一个打开的文件），而这个元素的索引值就是最终要返回到用户进程并赋值给变量</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fd1</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。到了这一步还仅仅是给当前用户进程分配了一个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据结构的变量，还没有找到对应的文件索引节点。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>       
</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>为此需要进一步调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vfs_open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数来找到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>path</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>指出的文件所对应的基于</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>数据结构的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>VFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>索引节点</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>node</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vfs_open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数需要完成两件事情：通过</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vfs_lookup</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>找到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>path</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>对应文件的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>；调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vop_open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数打开文件。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoListParagraph style='margin-left:25.75pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>找到文件设备的根目录</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“/”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的索引节点</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>需要注意，这里的</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'>vfs_lookup</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>函数是一个针对目录的操作函数，它会调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vop_lookup</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数来找到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统中的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“/test”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>目录下的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“testfile”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件。为此，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vfs_lookup</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数首先调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>get_device</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数，并进一步调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vfs_get_bootfs</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数（其实调用了）来找到根目录</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“/”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>对应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。这个</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>就是位于</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vfs.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>变量</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>bootfs_node</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。这个变量在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>init_main</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数（位于</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>kern/process/proc.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>）执行时获得了赋值。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoListParagraph style='margin-left:25.75pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>找到根目录</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“/”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>下的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“test”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>子目录对应的索引节点</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>在找到根目录对应的</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'>inode</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>后，通过调用</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'>vop_lookup</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>函数来查找</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'>“/”</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>和</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>“test”</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>这两层目录下的文件</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>“testfile”</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>所对应的索引节点，如果找到就返回此索引节点。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoListParagraph style='margin-left:25.75pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>把</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>node</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>建立联系</span></p>

<p class=MsoNormal style='margin-left:4.7pt;text-indent:24.0pt'><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>完成第</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>步后，将返回到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file_open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数中，通过执行语句</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“file-&gt;node=node;”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，就把当前进程的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>current-&gt;fs_struct-&gt;filemap[fd]</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>（即</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>所指变量）的成员变量</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>node</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>指针指向了代表</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“/test/testfile”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件的索引节点</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>node</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。这时返回</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fd</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。经过重重回退，通过系统调用返回，用户态的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>syscall-&gt;sys_open-&gt;open-&gt;safe_open</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>等用户函数的层层函数返回，最终把把</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fd</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>赋值给</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fd1</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。自此完成了打开文件操作。但这里我们还没有分析第</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>2</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和第</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>步是如何进一步调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统提供的函数找位于</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统上的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“/test/testfile”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>所对应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>磁盘</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的过程。下面需要进一步对此进行分析。</span></p>

<p class=MsoListParagraph style='margin-left:25.75pt;text-indent:0cm'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal><b><span style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统层的处理流程</span></b></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>这里需要分析文件系统抽象层中没有彻底分析的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vop_lookup</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数到底做了啥。下面我们来看看。在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_inode.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_node_dirops</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>变量定义了</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“.vop_lookup =
sfs_lookup”</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，所以我们重点分析</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_lookup</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的实现。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>sfs_lookup</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>有三个参数：</span><span style='font-size:
12.0pt;font-family:"Times New Roman"'>node</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>，</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>path</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>，</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>node_store</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。其中</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>node</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是根目录</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“/”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>所对应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>节点；</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>path</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是文件</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“testfile”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的绝对路径</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“/test/testfile”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，而</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>node_store</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是经过查找获得的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“testfile”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>所对应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>节点。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span style='font-size:12.0pt;
font-family:"Times New Roman"'>Sfs_lookup</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>函数以</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>“/”</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>为分割符，从左至右逐一分解</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>path</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>获得各个子目录和最终文件对应的</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>inode</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>节点。在本例中是分解出</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>“test”</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>子目录，并调用</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'>sfs_lookup_once</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>函数获得</span><span style='font-size:12.0pt;font-family:
"Times New Roman"'>“test”</span><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>子目录对应的</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>节点</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>subnode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，然后循环进一步调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_lookup_once</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>查找以</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“test”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>子目录下的文件</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>“testfile1”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>所对应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>节点。当无法分解</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>path</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>后，就意味着找到了</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>testfile1</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>对应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>节点，就可顺利返回了。</span></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>当然这里讲得还比较简单，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_lookup_once</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>将调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_dirent_search_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数来查找与路径名匹配的目录项，如果找到目录项，则根据目录项中记录的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>所处的数据块索引值找到路径名对应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>磁盘</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，并读入</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>磁盘</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>对的内容，创建</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>内存</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。</span></p>

<p class=MsoNormal style='margin-right:34.95pt;text-autospace:none'><b><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3.7.2 </span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>读文件</span></b></p>

<p class=MsoNormal style='text-indent:24.0pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>读文件其实就是读出目录中的目录项，首先假定文件在磁盘上且已经打开。用户进程有如下语句：</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>       
read(fd, data, len);</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>   
</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>即读取</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fd</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>对应文件，读取长度为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>len</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，存入</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>data</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中。下面来分析一下读文件的实现。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>   
</span></p>

<p class=MsoNormal><b><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>通用文件访问接口层的处理流程</span></b></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>   
</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>先进入通用文件访问接口层的处理流程，即进一步调用如下用户态函数：</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>read-&gt;sys_read-&gt;syscall</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，从而引起系统调用进入到内核态。到了内核态以后，通过中断处理例程，会调用到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sys_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>内核函数，并进一步调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sysfile_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>内核函数，进入到文件系统抽象层处理流程完成进一步读文件的操作。</span></p>

<p class=MsoNormal><b><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>文件系统抽象层的处理流程</span></b></p>

<p class=MsoListParagraph style='margin-left:25.75pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>1)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>检查错误，即检查读取长度是否为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>0</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和文件是否可读。</span></p>

<p class=MsoListParagraph style='margin-left:25.75pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>2)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>分配</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>buffer</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>空间，即调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>kmalloc</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数分配</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>4096</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>字节的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>buffer</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>空间。</span></p>

<p class=MsoListParagraph style='margin-left:25.75pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>3)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>读文件过程</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>[1]<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>实际读文件</span></p>

<p class=MsoListParagraph style='margin-left:42.75pt;text-indent:0cm'><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>循环读取文件，每次读取</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>buffer</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>大小。每次循环中，先检查剩余部分大小，若其小于</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>4096</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>字节，则只读取剩余部分的大小。然后调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数（详细分析见后）将文件内容读取到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>buffer</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>alen</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>为实际大小。调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>copy_to_user</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数将读到的内容拷贝到用户的内存空间中，调整各变量以进行下一次循环读取，直至指定长度读取完成。最后函数调用层层返回至用户程序，用户程序收到了读到的文件内容。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>[2]<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数</span></p>

<p class=MsoListParagraph style='margin-left:42.75pt;text-indent:0cm'><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>这个函数是读文件的核心函数。函数有</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>4</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>个参数，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fd</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是文件描述符，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>base</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是缓存的基地址，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>len</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是要读取的长度，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>copied_store</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>存放实际读取的长度。函数首先调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>fd2file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数找到对应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>结构，并检查是否可读。调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>filemap_acquire</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数使打开这个文件的计数加</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>1</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>vop_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数将文件内容读到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>iob</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中（详细分析见后）。调整文件指针偏移量</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>pos</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的值，使其向后移动实际读到的字节数</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>iobuf_used(iob)</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。最后调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>filemap_release</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数使打开这个文件的计数减</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>1</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，若打开计数为</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>0</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，则释放</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>file</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。</span></p>

<p class=MsoListParagraph style='margin-left:42.75pt;text-indent:0cm'><span
style='font-size:12.0pt;font-family:"Times New Roman"'>&nbsp;</span></p>

<p class=MsoNormal><b><span style='font-size:12.0pt;font-family:"Times New Roman"'>SFS</span></b><b><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>文件系统层的处理流程</span></b></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>   
vop_read</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数实际上是对</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的包装。在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_inode.c</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>中</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_node_fileops</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>变量定义了</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>.vop_read = sfs_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，所以下面来分析</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_read</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数的实现。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>   
sfs_read</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_io</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数。它有三个参数，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>node</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是对应文件的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>iob</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>是缓存，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>write</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>表示是读还是写的布尔值（</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>0</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>表示读，</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>1</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>表示写），这里是</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>0</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>。函数先找到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>对应</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sin</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，然后调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_io_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数进行读取文件操作，最后调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>iobuf_skip</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数调整</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>iobuf</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的指针。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>   
</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>在</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_io_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数中，先计算一些辅助变量，并处理一些特殊情况（比如越界），然后有</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_buf_op =
sfs_rbuf,sfs_block_op = sfs_rblock</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>，设置读取的函数操作。接着进行实际操作，先处理起始的没有对齐到块的部分，再以块为单位循环处理中间的部分，最后处理末尾剩余的部分。每部分中都调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_bmap_load_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数得到</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>blkno</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>对应的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>编号，并调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_rbuf</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>或</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_rblock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数读取数据（中间部分调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_rblock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，起始和末尾部分调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_rbuf</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>），调整相关变量。完成后如果</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>offset + alen &gt;
din-&gt;fileinfo.size</span><span lang=ZH-CN style='font-size:12.0pt;
font-family:楷体'>（写文件时会出现这种情况，读文件时不会出现这种情况，</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>alen</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>为实际读写的长度），则调整文件大小为</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>offset + alen</span><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>并设置</span><span style='font-size:12.0pt;
font-family:"Times New Roman"'>dirty</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>变量。</span></p>

<p class=MsoNormal><span style='font-size:12.0pt;font-family:"Times New Roman"'>   
sfs_bmap_load_nolock</span><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>函数将对应</span><span style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_inode</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的第</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>index</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>个索引指向的</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>block</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的索引值取出存到相应的指针指向的单元（</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>ino_store</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>）。它调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_bmap_get_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>来完成相应的操作。</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_rbuf</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_rblock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数最终都调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_rwblock_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数完成操作，而</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>sfs_rwblock_nolock</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>函数调用</span><span
style='font-size:12.0pt;font-family:"Times New Roman"'>dop_io-&gt;disk0_io-&gt;disk0_read_blks_nolock-&gt;ide_read_secs</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>完成对磁盘的操作。</span></p>

<h1 style='line-height:normal'><span style='font-size:16.0pt;font-family:"Times New Roman"'>4.
</span><span lang=ZH-CN style='font-size:16.0pt;font-family:楷体'>实验报告要求</span></h1>

<p class=MsoNormalIndent style='text-indent:25.5pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>从网站上下载</span><span style='font-size:
12.0pt'>lab8.zip</span><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>后，解压得到本文档和代码目录</span><span style='font-size:12.0pt'> lab8</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>，完成实验中的各个练习。完成代码编写并检查无误后，在对应目录下执行</span><span
style='font-size:12.0pt'> make handin </span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>任务，即会自动生成</span><span style='font-size:12.0pt'>
lab8-handin.tar.gz</span><span lang=ZH-CN style='font-size:12.0pt;font-family:
楷体'>。最后请一定提前或按时提交到网络学堂上。</span></p>

<p class=MsoNormalIndent style='text-indent:25.5pt'><span lang=ZH-CN
style='font-size:12.0pt;font-family:楷体'>注意有</span><span style='font-size:12.0pt'>“LAB8”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>的注释，这是需要主要修改的内容。代码中所有需要完成的地方</span><span
style='font-size:12.0pt'>challenge</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>除外）都有</span><span style='font-size:12.0pt'>“LAB8”</span><span
lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>和</span><span
style='font-size:12.0pt'>“YOUR CODE”</span><span lang=ZH-CN style='font-size:
12.0pt;font-family:楷体'>的注释，请在提交时特别注意保持注释，并将</span><span style='font-size:12.0pt'>“YOUR
CODE”</span><span lang=ZH-CN style='font-size:12.0pt;font-family:楷体'>替换为自己的学号，并且将所有标有对应注释的部分填上正确的代码。</span></p>

</div>

</body>

</html>
